<script src="/javascripts/RTCMultiConnection.min.js"></script>
<script src="/javascripts/socket.io.js"></script>
<script src="/javascripts/RecordRTC.js"></script>

<input id="room" placeholder="UniqueRoomID">

<button id="openorjoin">
OpenOrJoin
</button>

<button id="btnStartRecording" style="visibility:hidden">
Start
</button>

<button id="btnStopRecording" style="visibility:hidden">
Stop
</button>

<hr>
<div id="local">

</div>

<hr>

<div id="remote">

</div>

<script>
var counter=0;
var connection = new RTCMultiConnection();

// this line is VERY_important
connection.socketURL = 'https://rtcmulticonnection.herokuapp.com:443/';

connection.sdpmandatory={
'OfferToReceiveAudio':true,
'OfferToReceiveVideo':false
}

connection.session = {
    audio: true,
    video: false,
    data: true
};

connection.mediaConstraints = {
    audio: true,
    video: false,
    data: true
};

var localvideos= document.getElementById("local");
var remotevideos=document.getElementById("remote");
var listOfRecorders = {};
var recorder="";
var roomid=document.getElementById("room");
roomid.value=connection.token();

document.getElementById("openorjoin").onclick=function(){
this.disabled=true;
connection.openOrJoin(roomid.value);
};

connection.onstream = function(event) {
	
	var isInitiator = connection.isInitiator;
		
     recorder = RecordRTC(event.stream, {
        type: 'audio',
        recorderType: MediaStreamRecorder
    });
	
	if (isInitiator === true ) {
        // initiator's own stream
		document.getElementById("btnStartRecording").style.visibility = "visible";
		document.getElementById("btnStopRecording").style.visibility = "visible";
    }	
};

document.getElementById("btnStartRecording").onclick=function(){
	counter++;
	recorder.startRecording();
    listOfRecorders[counter] = recorder;
    alert(listOfRecorders);
};


connection.onmessage = function(event) {
    alert(event.data);
    var url = event.data,
    li = document.createElement('li'),
    mt = document.createElement('audio'),
    hf = document.createElement('a');

    mt.controls = true;
    mt.src = url;
    hf.href = url;
    hf.download = `${counter}${'.ogg'}`;
    hf.innerHTML = `${hf.download}`;
    li.appendChild(mt);
    li.appendChild(hf);
    remotevideos.appendChild(li);
};

document.getElementById("btnStopRecording").onclick = function() {
	
    var recorder = listOfRecorders[counter];
    recorder.stopRecording(function() {
    	
        var blob = recorder.getBlob();
        var url = URL.createObjectURL(blob),
        li = document.createElement('li'),
        mt = document.createElement('audio'),
        hf = document.createElement('a');
        
        mt.controls = true;
        mt.src = url;
        hf.href = url;
        hf.download = `${counter}${'.ogg'}`;
        hf.innerHTML = `${hf.download}`;
        li.appendChild(mt);
        li.appendChild(hf);
       localvideos.appendChild(li);
       connection.send(url);
       alert("sent to the clients connected on journey");
    });
};

</script>
